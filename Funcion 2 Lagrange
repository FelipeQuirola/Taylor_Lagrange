from scipy.interpolate import lagrange

X = [0, 1, 2]
Y = [0, 0.785, 1.107]
polynomial = lagrange(X, Y)
print(polynomial)

def plot_lagrange(fcn: Callable[[float], float], pol, n: int, x_range: tuple, X, Y):
    x = sym.symbols("x")
    x_vals = np.linspace(x_range[0], x_range[1], 1000)
    original_fcn = sym.lambdify(x, fcn(x), "numpy")
    y_vals = original_fcn(x_vals)
    plt.plot(x_vals, y_vals, label=f"Función original", color='black')

    x_values = np.linspace(x_range[0], x_range[1], 1000)
    y_values = polynomial(x_values)
    plt.scatter(X, Y, color='red', label='Datos Originales')
    plt.plot(x_values, y_values, label=f'Polinomio Interpolado de orden n = {n}')

    plt.xlabel('X')
    plt.ylabel('Y')
    plt.title('Interpolación de Lagrange')
    plt.legend()
    plt.grid(True)
    plt.show()

# Llamamos a la función graficadora con los datos proporcionados
plot_lagrange(func2, polynomial, 5, (0, 2), X, Y)
